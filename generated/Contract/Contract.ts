// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CollectionAdded extends ethereum.Event {
  get params(): CollectionAdded__Params {
    return new CollectionAdded__Params(this);
  }
}

export class CollectionAdded__Params {
  _event: CollectionAdded;

  constructor(event: CollectionAdded) {
    this._event = event;
  }

  get collection(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CollectionRemoved extends ethereum.Event {
  get params(): CollectionRemoved__Params {
    return new CollectionRemoved__Params(this);
  }
}

export class CollectionRemoved__Params {
  _event: CollectionRemoved;

  constructor(event: CollectionRemoved) {
    this._event = event;
  }

  get collection(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CollectionUnverify extends ethereum.Event {
  get params(): CollectionUnverify__Params {
    return new CollectionUnverify__Params(this);
  }
}

export class CollectionUnverify__Params {
  _event: CollectionUnverify;

  constructor(event: CollectionUnverify) {
    this._event = event;
  }

  get collection(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CollectionUpdated extends ethereum.Event {
  get params(): CollectionUpdated__Params {
    return new CollectionUpdated__Params(this);
  }
}

export class CollectionUpdated__Params {
  _event: CollectionUpdated;

  constructor(event: CollectionUpdated) {
    this._event = event;
  }

  get collection(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ItemDelisted extends ethereum.Event {
  get params(): ItemDelisted__Params {
    return new ItemDelisted__Params(this);
  }
}

export class ItemDelisted__Params {
  _event: ItemDelisted;

  constructor(event: ItemDelisted) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ItemListed extends ethereum.Event {
  get params(): ItemListed__Params {
    return new ItemListed__Params(this);
  }
}

export class ItemListed__Params {
  _event: ItemListed;

  constructor(event: ItemListed) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ItemSold extends ethereum.Event {
  get params(): ItemSold__Params {
    return new ItemSold__Params(this);
  }
}

export class ItemSold__Params {
  _event: ItemSold;

  constructor(event: ItemSold) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ItemUpdated extends ethereum.Event {
  get params(): ItemUpdated__Params {
    return new ItemUpdated__Params(this);
  }
}

export class ItemUpdated__Params {
  _event: ItemUpdated;

  constructor(event: ItemUpdated) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newPrice(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OfferAccepted extends ethereum.Event {
  get params(): OfferAccepted__Params {
    return new OfferAccepted__Params(this);
  }
}

export class OfferAccepted__Params {
  _event: OfferAccepted;

  constructor(event: OfferAccepted) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get collection(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get token(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OfferCancelled extends ethereum.Event {
  get params(): OfferCancelled__Params {
    return new OfferCancelled__Params(this);
  }
}

export class OfferCancelled__Params {
  _event: OfferCancelled;

  constructor(event: OfferCancelled) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collection(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OfferCreated extends ethereum.Event {
  get params(): OfferCreated__Params {
    return new OfferCreated__Params(this);
  }
}

export class OfferCreated__Params {
  _event: OfferCreated;

  constructor(event: OfferCreated) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OfferUpdated extends ethereum.Event {
  get params(): OfferUpdated__Params {
    return new OfferUpdated__Params(this);
  }
}

export class OfferUpdated__Params {
  _event: OfferUpdated;

  constructor(event: OfferUpdated) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PlatformUpdated extends ethereum.Event {
  get params(): PlatformUpdated__Params {
    return new PlatformUpdated__Params(this);
  }
}

export class PlatformUpdated__Params {
  _event: PlatformUpdated;

  constructor(event: PlatformUpdated) {
    this._event = event;
  }

  get fees(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get admin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Contract__availableListingsResultNftInfoStruct extends ethereum.Tuple {
  get seller(): Address {
    return this[0].toAddress();
  }

  get price(): BigInt {
    return this[1].toBigInt();
  }
}

export class Contract__availableListingsResult {
  value0: Array<BigInt>;
  value1: Array<Contract__availableListingsResultNftInfoStruct>;

  constructor(
    value0: Array<BigInt>,
    value1: Array<Contract__availableListingsResultNftInfoStruct>
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigIntArray(this.value0));
    map.set("value1", ethereum.Value.fromTupleArray(this.value1));
    return map;
  }

  getNfts(): Array<BigInt> {
    return this.value0;
  }

  getNftInfo(): Array<Contract__availableListingsResultNftInfoStruct> {
    return this.value1;
  }
}

export class Contract__availableOffersResultOfferInfoStruct extends ethereum.Tuple {
  get buyer(): Address {
    return this[0].toAddress();
  }

  get price(): BigInt {
    return this[1].toBigInt();
  }
}

export class Contract__availableOffersResult {
  value0: Array<Address>;
  value1: Array<Contract__availableOffersResultOfferInfoStruct>;

  constructor(
    value0: Array<Address>,
    value1: Array<Contract__availableOffersResultOfferInfoStruct>
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromTupleArray(this.value1));
    return map;
  }

  getOfferCount(): Array<Address> {
    return this.value0;
  }

  getOfferInfo(): Array<Contract__availableOffersResultOfferInfoStruct> {
    return this.value1;
  }
}

export class Contract__collectionResult {
  value0: Address;
  value1: BigInt;
  value2: i32;

  constructor(value0: Address, value1: BigInt, value2: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    return map;
  }

  getCollectionAddress(): Address {
    return this.value0;
  }

  getRoyaltyFees(): BigInt {
    return this.value1;
  }

  getStatus(): i32 {
    return this.value2;
  }
}

export class Contract__sellNFTResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getSeller(): Address {
    return this.value0;
  }

  getPrice(): BigInt {
    return this.value1;
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  createOffer(_collection: Address, _tokenId: BigInt, _value: BigInt): boolean {
    let result = super.call(
      "createOffer",
      "createOffer(address,uint256,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_collection),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromUnsignedBigInt(_value)
      ]
    );

    return result[0].toBoolean();
  }

  try_createOffer(
    _collection: Address,
    _tokenId: BigInt,
    _value: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "createOffer",
      "createOffer(address,uint256,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_collection),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromUnsignedBigInt(_value)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  updateListing(
    _collection: Address,
    _tokenId: BigInt,
    _newPrice: BigInt
  ): boolean {
    let result = super.call(
      "updateListing",
      "updateListing(address,uint256,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_collection),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromUnsignedBigInt(_newPrice)
      ]
    );

    return result[0].toBoolean();
  }

  try_updateListing(
    _collection: Address,
    _tokenId: BigInt,
    _newPrice: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "updateListing",
      "updateListing(address,uint256,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_collection),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromUnsignedBigInt(_newPrice)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  updateOffer(
    _collection: Address,
    _tokenId: BigInt,
    _newValue: BigInt
  ): boolean {
    let result = super.call(
      "updateOffer",
      "updateOffer(address,uint256,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_collection),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromUnsignedBigInt(_newValue)
      ]
    );

    return result[0].toBoolean();
  }

  try_updateOffer(
    _collection: Address,
    _tokenId: BigInt,
    _newValue: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "updateOffer",
      "updateOffer(address,uint256,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_collection),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromUnsignedBigInt(_newValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  availableListings(_collection: Address): Contract__availableListingsResult {
    let result = super.call(
      "availableListings",
      "availableListings(address):(uint256[],(address,uint256)[])",
      [ethereum.Value.fromAddress(_collection)]
    );

    return new Contract__availableListingsResult(
      result[0].toBigIntArray(),
      result[1].toTupleArray<Contract__availableListingsResultNftInfoStruct>()
    );
  }

  try_availableListings(
    _collection: Address
  ): ethereum.CallResult<Contract__availableListingsResult> {
    let result = super.tryCall(
      "availableListings",
      "availableListings(address):(uint256[],(address,uint256)[])",
      [ethereum.Value.fromAddress(_collection)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__availableListingsResult(
        value[0].toBigIntArray(),
        value[1].toTupleArray<Contract__availableListingsResultNftInfoStruct>()
      )
    );
  }

  availableOffers(
    _collection: Address,
    _tokenId: BigInt
  ): Contract__availableOffersResult {
    let result = super.call(
      "availableOffers",
      "availableOffers(address,uint256):(address[],(address,uint256)[])",
      [
        ethereum.Value.fromAddress(_collection),
        ethereum.Value.fromUnsignedBigInt(_tokenId)
      ]
    );

    return new Contract__availableOffersResult(
      result[0].toAddressArray(),
      result[1].toTupleArray<Contract__availableOffersResultOfferInfoStruct>()
    );
  }

  try_availableOffers(
    _collection: Address,
    _tokenId: BigInt
  ): ethereum.CallResult<Contract__availableOffersResult> {
    let result = super.tryCall(
      "availableOffers",
      "availableOffers(address,uint256):(address[],(address,uint256)[])",
      [
        ethereum.Value.fromAddress(_collection),
        ethereum.Value.fromUnsignedBigInt(_tokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__availableOffersResult(
        value[0].toAddressArray(),
        value[1].toTupleArray<Contract__availableOffersResultOfferInfoStruct>()
      )
    );
  }

  collection(param0: Address): Contract__collectionResult {
    let result = super.call(
      "collection",
      "collection(address):(address,uint256,uint8)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Contract__collectionResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toI32()
    );
  }

  try_collection(
    param0: Address
  ): ethereum.CallResult<Contract__collectionResult> {
    let result = super.tryCall(
      "collection",
      "collection(address):(address,uint256,uint8)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__collectionResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toI32()
      )
    );
  }

  maxFees(): i32 {
    let result = super.call("maxFees", "maxFees():(uint8)", []);

    return result[0].toI32();
  }

  try_maxFees(): ethereum.CallResult<i32> {
    let result = super.tryCall("maxFees", "maxFees():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  minFees(): i32 {
    let result = super.call("minFees", "minFees():(uint8)", []);

    return result[0].toI32();
  }

  try_minFees(): ethereum.CallResult<i32> {
    let result = super.tryCall("minFees", "minFees():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  sellNFT(param0: Address, param1: BigInt): Contract__sellNFTResult {
    let result = super.call(
      "sellNFT",
      "sellNFT(address,uint256):(address,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new Contract__sellNFTResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_sellNFT(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<Contract__sellNFTResult> {
    let result = super.tryCall(
      "sellNFT",
      "sellNFT(address,uint256):(address,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__sellNFTResult(value[0].toAddress(), value[1].toBigInt())
    );
  }

  supportedCollections(): Array<Address> {
    let result = super.call(
      "supportedCollections",
      "supportedCollections():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_supportedCollections(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "supportedCollections",
      "supportedCollections():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  tradeFee(): i32 {
    let result = super.call("tradeFee", "tradeFee():(uint8)", []);

    return result[0].toI32();
  }

  try_tradeFee(): ethereum.CallResult<i32> {
    let result = super.tryCall("tradeFee", "tradeFee():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  userOffers(_collection: Address): Array<BigInt> {
    let result = super.call("userOffers", "userOffers(address):(uint256[])", [
      ethereum.Value.fromAddress(_collection)
    ]);

    return result[0].toBigIntArray();
  }

  try_userOffers(_collection: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "userOffers",
      "userOffers(address):(uint256[])",
      [ethereum.Value.fromAddress(_collection)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }
}

export class AcceptOfferCall extends ethereum.Call {
  get inputs(): AcceptOfferCall__Inputs {
    return new AcceptOfferCall__Inputs(this);
  }

  get outputs(): AcceptOfferCall__Outputs {
    return new AcceptOfferCall__Outputs(this);
  }
}

export class AcceptOfferCall__Inputs {
  _call: AcceptOfferCall;

  constructor(call: AcceptOfferCall) {
    this._call = call;
  }

  get _collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _offerer(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class AcceptOfferCall__Outputs {
  _call: AcceptOfferCall;

  constructor(call: AcceptOfferCall) {
    this._call = call;
  }
}

export class AddCollectionCall extends ethereum.Call {
  get inputs(): AddCollectionCall__Inputs {
    return new AddCollectionCall__Inputs(this);
  }

  get outputs(): AddCollectionCall__Outputs {
    return new AddCollectionCall__Outputs(this);
  }
}

export class AddCollectionCall__Inputs {
  _call: AddCollectionCall;

  constructor(call: AddCollectionCall) {
    this._call = call;
  }

  get _collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _collectionAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _royaltyFees(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddCollectionCall__Outputs {
  _call: AddCollectionCall;

  constructor(call: AddCollectionCall) {
    this._call = call;
  }
}

export class BuyNFTCall extends ethereum.Call {
  get inputs(): BuyNFTCall__Inputs {
    return new BuyNFTCall__Inputs(this);
  }

  get outputs(): BuyNFTCall__Outputs {
    return new BuyNFTCall__Outputs(this);
  }
}

export class BuyNFTCall__Inputs {
  _call: BuyNFTCall;

  constructor(call: BuyNFTCall) {
    this._call = call;
  }

  get _collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class BuyNFTCall__Outputs {
  _call: BuyNFTCall;

  constructor(call: BuyNFTCall) {
    this._call = call;
  }
}

export class CancelListingCall extends ethereum.Call {
  get inputs(): CancelListingCall__Inputs {
    return new CancelListingCall__Inputs(this);
  }

  get outputs(): CancelListingCall__Outputs {
    return new CancelListingCall__Outputs(this);
  }
}

export class CancelListingCall__Inputs {
  _call: CancelListingCall;

  constructor(call: CancelListingCall) {
    this._call = call;
  }

  get _collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CancelListingCall__Outputs {
  _call: CancelListingCall;

  constructor(call: CancelListingCall) {
    this._call = call;
  }
}

export class CancelOfferCall extends ethereum.Call {
  get inputs(): CancelOfferCall__Inputs {
    return new CancelOfferCall__Inputs(this);
  }

  get outputs(): CancelOfferCall__Outputs {
    return new CancelOfferCall__Outputs(this);
  }
}

export class CancelOfferCall__Inputs {
  _call: CancelOfferCall;

  constructor(call: CancelOfferCall) {
    this._call = call;
  }

  get _collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CancelOfferCall__Outputs {
  _call: CancelOfferCall;

  constructor(call: CancelOfferCall) {
    this._call = call;
  }
}

export class CreateOfferCall extends ethereum.Call {
  get inputs(): CreateOfferCall__Inputs {
    return new CreateOfferCall__Inputs(this);
  }

  get outputs(): CreateOfferCall__Outputs {
    return new CreateOfferCall__Outputs(this);
  }
}

export class CreateOfferCall__Inputs {
  _call: CreateOfferCall;

  constructor(call: CreateOfferCall) {
    this._call = call;
  }

  get _collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateOfferCall__Outputs {
  _call: CreateOfferCall;

  constructor(call: CreateOfferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _tradeFee(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _admin(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _WKCS(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ListCall extends ethereum.Call {
  get inputs(): ListCall__Inputs {
    return new ListCall__Inputs(this);
  }

  get outputs(): ListCall__Outputs {
    return new ListCall__Outputs(this);
  }
}

export class ListCall__Inputs {
  _call: ListCall;

  constructor(call: ListCall) {
    this._call = call;
  }

  get _collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ListCall__Outputs {
  _call: ListCall;

  constructor(call: ListCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnverifyCollectionCall extends ethereum.Call {
  get inputs(): UnverifyCollectionCall__Inputs {
    return new UnverifyCollectionCall__Inputs(this);
  }

  get outputs(): UnverifyCollectionCall__Outputs {
    return new UnverifyCollectionCall__Outputs(this);
  }
}

export class UnverifyCollectionCall__Inputs {
  _call: UnverifyCollectionCall;

  constructor(call: UnverifyCollectionCall) {
    this._call = call;
  }

  get _collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnverifyCollectionCall__Outputs {
  _call: UnverifyCollectionCall;

  constructor(call: UnverifyCollectionCall) {
    this._call = call;
  }
}

export class UpdateCollectionCall extends ethereum.Call {
  get inputs(): UpdateCollectionCall__Inputs {
    return new UpdateCollectionCall__Inputs(this);
  }

  get outputs(): UpdateCollectionCall__Outputs {
    return new UpdateCollectionCall__Outputs(this);
  }
}

export class UpdateCollectionCall__Inputs {
  _call: UpdateCollectionCall;

  constructor(call: UpdateCollectionCall) {
    this._call = call;
  }

  get _collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _collectionAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _royaltyFees(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateCollectionCall__Outputs {
  _call: UpdateCollectionCall;

  constructor(call: UpdateCollectionCall) {
    this._call = call;
  }
}

export class UpdateListingCall extends ethereum.Call {
  get inputs(): UpdateListingCall__Inputs {
    return new UpdateListingCall__Inputs(this);
  }

  get outputs(): UpdateListingCall__Outputs {
    return new UpdateListingCall__Outputs(this);
  }
}

export class UpdateListingCall__Inputs {
  _call: UpdateListingCall;

  constructor(call: UpdateListingCall) {
    this._call = call;
  }

  get _collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _newPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateListingCall__Outputs {
  _call: UpdateListingCall;

  constructor(call: UpdateListingCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UpdateOfferCall extends ethereum.Call {
  get inputs(): UpdateOfferCall__Inputs {
    return new UpdateOfferCall__Inputs(this);
  }

  get outputs(): UpdateOfferCall__Outputs {
    return new UpdateOfferCall__Outputs(this);
  }
}

export class UpdateOfferCall__Inputs {
  _call: UpdateOfferCall;

  constructor(call: UpdateOfferCall) {
    this._call = call;
  }

  get _collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _newValue(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateOfferCall__Outputs {
  _call: UpdateOfferCall;

  constructor(call: UpdateOfferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UpdatePlatformCall extends ethereum.Call {
  get inputs(): UpdatePlatformCall__Inputs {
    return new UpdatePlatformCall__Inputs(this);
  }

  get outputs(): UpdatePlatformCall__Outputs {
    return new UpdatePlatformCall__Outputs(this);
  }
}

export class UpdatePlatformCall__Inputs {
  _call: UpdatePlatformCall;

  constructor(call: UpdatePlatformCall) {
    this._call = call;
  }

  get _newTradeFees(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _newAdmin(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UpdatePlatformCall__Outputs {
  _call: UpdatePlatformCall;

  constructor(call: UpdatePlatformCall) {
    this._call = call;
  }
}

export class WithdrawRevenueCall extends ethereum.Call {
  get inputs(): WithdrawRevenueCall__Inputs {
    return new WithdrawRevenueCall__Inputs(this);
  }

  get outputs(): WithdrawRevenueCall__Outputs {
    return new WithdrawRevenueCall__Outputs(this);
  }
}

export class WithdrawRevenueCall__Inputs {
  _call: WithdrawRevenueCall;

  constructor(call: WithdrawRevenueCall) {
    this._call = call;
  }
}

export class WithdrawRevenueCall__Outputs {
  _call: WithdrawRevenueCall;

  constructor(call: WithdrawRevenueCall) {
    this._call = call;
  }
}
